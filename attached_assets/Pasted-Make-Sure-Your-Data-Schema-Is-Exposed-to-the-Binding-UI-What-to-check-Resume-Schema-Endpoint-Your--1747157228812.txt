Make Sure Your Data Schema Is Exposed to the Binding UI
What to check:

Resume Schema Endpoint
Your binding interface needs a JSON schema of your resumeData shape (all the keys, nested objects, and arrays). On most systems this is exposed at something like:

vbnet
Copy
Edit
GET /api/resume/schema
or

ruby
Copy
Edit
GET /api/templates/:templateId/schema
Go to your browser’s dev tools → Network tab → reload the Bindings page and watch for a call to /schema or /fields. If it’s 404 or empty, that’s why nothing shows.

Backend Configuration

In your template‑admin code, there should be a config value pointing at your schema endpoint. If that URL is mis‑configured, the UI won’t load any fields.

Make sure your backend is returning a JSON object with all of your resume fields, e.g.:

json
Copy
Edit
{
  "name": "John Doe",
  "contact": {
    "phone": "+1…",
    "email": "…",
    "address": "…"
  },
  "sections": {
    "education": [ { "year":"…","desc":"…" } ],
    "experience": [ … ],
    "skills": [ … ],
    "customSections": [ … ]
  }
}
2. Refresh / Auto‑Suggest
At the top right of your Bindings page you have these buttons:

Refresh: Re‑pulls the token list and your data fields. If your schema just got fixed, click this to reload it.

Auto‑suggest: Attempts to match placeholder tokens to fields of the same name. For example, it will bind {{ name }} → name automatically if that field exists. This also forces a schema reload under the hood.

Wizard: Walks you through token‑by‑token in a linear flow—great if you’ve got 30+ fields.

Try hitting Refresh first. If that doesn’t populate any fields, then hit Auto‑suggest. If you still see an empty “Resume Data Fields” panel, move on to step 3.

3. Verify Your Schema on the Server
Open a new browser tab and directly fetch your schema endpoint. For example:

ruby
Copy
Edit
https://yourapp.com/api/resume/schema
Do you get back a JSON object with all your fields?

Yes? Then it’s a front‑end bug—clear your browser cache or check the console for errors.

No? Your server isn’t exposing the schema. You’ll need to wire up an endpoint that reads your resumeData shape and serves it to the admin UI.

4. Map One Token to One Field
Once your schema is visible:

Click on the first placeholder token in the Template Tokens panel (it highlights purple).

In the Resume Data Fields panel, either scroll or Search for the matching field—e.g. type “name” to find name.

Click Apply or drag that field onto the token.

You should see the progress bar climb (e.g. “1 of 23 fields mapped”).

TL;DR
Make sure your backend is serving the resume schema via the API the Binding UI expects.

Click “Refresh” (and then “Auto‑suggest”) in the Bindings UI to reload that schema.

Bind one token at a time by selecting a placeholder → picking its data field → clicking Apply.