This strongly suggests that the rendering logic is wrapped in an overly broad conditional, likely this kind of pattern:

tsx
Copy
Edit
{(
  resumeData.additionalInfo?.linkedin &&
  resumeData.additionalInfoVisibility?.linkedin &&
  resumeData.additionalInfo?.website &&
  resumeData.additionalInfoVisibility?.website &&
  resumeData.additionalInfo?.drivingLicense &&
  resumeData.additionalInfoVisibility?.drivingLicense
) && (
  // your rendering block
)}
Which means: the block only renders if all three are available and visible.

‚úÖ Correct Fix: Remove the outer condition
Instead of checking everything at once, each field should render independently:

üîß Replace your current code with:
tsx
Copy
Edit
<section>
  <h2 className="font-semibold text-gray-800 text-sm border-b border-gray-300 pb-1 mb-2">
    CONTACT
  </h2>
  <div className="text-xs space-y-1 text-gray-600">
    {resumeData.email && (
      <div>
        <span className="font-medium">Email: </span>{resumeData.email}
      </div>
    )}
    {resumeData.phone && (
      <div>
        <span className="font-medium">Phone: </span>{resumeData.phone}
      </div>
    )}
    {(resumeData.city || resumeData.country) && (
      <div>
        <span className="font-medium">Location: </span>
        {[resumeData.city, resumeData.country].filter(Boolean).join(", ")}
      </div>
    )}
    {/* ‚úÖ Each additional info field rendered separately */}
    {resumeData.additionalInfo?.linkedin && resumeData.additionalInfoVisibility?.linkedin && (
      <div>
        <span className="font-medium">LinkedIn: </span>{resumeData.additionalInfo.linkedin}
      </div>
    )}
    {resumeData.additionalInfo?.website && resumeData.additionalInfoVisibility?.website && (
      <div>
        <span className="font-medium">Website: </span>{resumeData.additionalInfo.website}
      </div>
    )}
    {resumeData.additionalInfo?.drivingLicense && resumeData.additionalInfoVisibility?.drivingLicense && (
      <div>
        <span className="font-medium">License: </span>{resumeData.additionalInfo.drivingLicense}
      </div>
    )}
  </div>
</section>
‚úÖ Confirm the Data Structure
Make sure this is what‚Äôs in context (resumeData.additionalInfoVisibility):

json
Copy
Edit
{
  "linkedin": true,
  "website": false,
  "drivingLicense": true
}
If they are strings like "true" instead of booleans, it can also break && logic. Convert them properly before saving.

‚úÖ Bonus Debug Logging (Optional)
Right before the return in your component, add this:

tsx
Copy
Edit
console.log("LinkedIn visible?", resumeData.additionalInfoVisibility?.linkedin);
console.log("LinkedIn value:", resumeData.additionalInfo?.linkedin);
This helps confirm whether the true/false and values are actually present at render time.

‚úÖ Summary
‚ùå Don‚Äôt wrap all three fields in one if (...) && (...) && (...) condition.

‚úÖ Render each info block individually with its own check.

‚úÖ Confirm resumeData.additionalInfoVisibility and resumeData.additionalInfo have the correct values.

